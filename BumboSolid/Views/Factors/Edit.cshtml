@model BumboSolid.Models.EditPrognosisFactorsViewModel

@{
    String[] daysOfTheWeek = { "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag", "Zondag" };
    int value;
}

<form method="post" asp-controller="Factors" asp-action="Edit" asp-route-id="@Model.Prognosis.Id">
    <table class="table" cellspacing="0">
        <tr>
            <th></th>
            <th scope="col" class="rounded-top table-gray">Schatting Bezoekersdrukte</th>
            <th scope="col" class="rounded-top table-secondary">Feestdagen</th>
            <th scope="col" class="rounded-top table-gray">
                Weer
                <a asp-controller="Weather" asp-action="Edit" class="remove-text-decoration p-2 bg-warning ms-2 rounded">
                    <img src="/images/pencil-square.svg" alt="Edit Icon" width="16" height="16" />
                </a>
            </th>
            <th scope="col" class="rounded-top table-secondary">Overig</th>
            <th scope="col" class="rounded-top table-gray">Totale Schatting Bezoekersdrukte</th>
        </tr>
        @for (int i = 0; i < daysOfTheWeek.Length; i++)
        {
            String day = daysOfTheWeek[i];
            var prognosisDay = Model.Prognosis.PrognosisDays.FirstOrDefault(p => p.Weekday == i);
            var weatherId = prognosisDay?.Factors.FirstOrDefault(f => f.Type == "Weer")?.WeatherId;

            var overigFactor = prognosisDay?.Factors.FirstOrDefault(f => f.Type == "Overig");
            var description = overigFactor?.Description ?? "";

            <tr>
                <th scope="row">@day</th>
                @{
                    if (prognosisDay?.VisitorEstimate == null)
                    {
                        value = 0;
                    }
                    else
                    {
                        value = prognosisDay.VisitorEstimate;
                    }
                }
                <td class="table-gray">
                    <input id="visitor-estimate-@i" name="VisitorEstimates[@i]" type="number" class="form-control" value="@value" onchange="updateVisitorEstimate()">
                </td>

                @{
                    value = Model.Prognosis.PrognosisDays.First(x => x.Weekday == i).Factors.First(x => x.Type == "Feestdagen").Impact;
                }
                <td class="table-secondary">
                    <input id="holiday-@i" name="Holidays[@i]" type="number" class="form-control small-input" value="@value" onchange="updateVisitorEstimate()">
                </td>

                <td class="table-gray gap-2">
                    <div class="d-flex flex-row">
                        @{
                            String imageSrc = weatherId != null ? $"/images/weather/{weatherId}.svg" : "/images/weather/3.svg";
                        }
                        <img id="@("weather-icon-" + i)" src=@imageSrc class="background-white" />

                        <select id="@("weather-select-" + i)" name="WeatherIds[@i]" class="form-control small-input form-select" onchange="@("updateIcon("+i+"); updateVisitorEstimate();")">
                            @{
                                for (int j = 0; j < 7; j++)
                                {
                                    bool isSelected = j == weatherId;
                                    <option selected="@(isSelected)" value="@j" class="@Model.WeatherValues[j].Impact">@Model.WeatherValues[j].Impact</option>
                                }
                            }
                        </select>
                    </div>
                </td>

                @{
                    value = Model.Prognosis.PrognosisDays.First(x => x.Weekday == i).Factors.First(x => x.Type == "Overig").Impact;
                }
                <td class="table-secondary gap-2">
                    <div class="d-flex flex-row">
                        <input id="other-@i" name="Others[@i]" type="number" class="form-control small-input" value="@value" onchange="updateVisitorEstimate()">
                        <textarea name="Descriptions[@i]" class="factor-description" placeholder="Beschrijving" rows="2" cols="25">@description</textarea>
                    </div>
                </td>

                <td class="table-gray">
                    <p id="total-estimated-visitor-count-@i" class="background-light impact-unchangeable-dark">0</p>
                </td>
            </tr>
        }
    </table>

    <div class="d-flex flex-row mt-3">
        <a asp-controller="Prognoses" asp-action="" class="btn early-btn btn-secondary">Terug</a>
        <button type="submit" class="btn bumbo-btn me-3">Opslaan</button>
    </div>
</form>

<script>
    function updateIcon(selectId) {
        document.getElementById("weather-icon-" + selectId).src = "/images/weather/" + document.getElementById("weather-select-" + selectId).value + ".svg";
    }

    function updateVisitorEstimate() {
        for (i = 0; i < 7; i++) {
            const visitorEstimate = document.getElementById("visitor-estimate-" + i).value || 0;
            const holidayImpact = document.getElementById("holiday-" + i).value || 0;
            const weatherImpact = document.getElementById("weather-select-" + i).options[document.getElementById("weather-select-" + i).value].className || 0;
            const otherImpact = document.getElementById("other-" + i).value || 0;

            const totalEstimate = Math.round(
                visitorEstimate *
                (holidayImpact / 100 + 1) *
                (weatherImpact / 100 + 1) *
                (otherImpact / 100 + 1)
            );

            document.getElementById("total-estimated-visitor-count-" + i).innerText = totalEstimate;
        }
    }

    updateVisitorEstimate();
</script>
