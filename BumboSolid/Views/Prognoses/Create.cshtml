@using BumboSolid.Data.Models
@model BumboSolid.Models.CreatePrognosisViewModel

@{
    string[] daysOfTheWeek = { "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag", "Zondag" };
    string[] factorTypes = { "Feestdagen", "Weer", "Overig" };
    DateTime GetStartDate(int year, int week) {
        var ci = System.Globalization.CultureInfo.CurrentCulture;
        var calendar = ci.Calendar;
        var jan1 = new DateTime(year, 1, 1);
        var firstDayOfWeek = jan1.AddDays((week - 1) * 7 - (int)jan1.DayOfWeek + (int)DayOfWeek.Monday);
        return firstDayOfWeek.Year < year ? firstDayOfWeek.AddDays(7) : firstDayOfWeek;
    }
    DateTime GetEndDate(int year, int week) => GetStartDate(year, week).AddDays(6);
    var firstDate = GetStartDate(Model.Prognosis!.Year, Model.Prognosis.WeekNumber);
    var lastDate = GetEndDate(Model.Prognosis.Year, Model.Prognosis.WeekNumber);
    var formattedFirstDate = firstDate.ToString("dd/MM/yyyy");
    var formattedLastDate = lastDate.ToString("dd/MM/yyyy");
}

<header class="d-flex flex-column align-items-center">
    <div class="d-flex w-100 header-items">
        <div class="d-flex justify-content-start align-items-center w-35">
            <a asp-action="Index" class="btn bumbo-btn bumbo-btn-back">
                <i class="fa-solid fa-arrow-left"></i> Terug
            </a>
        </div>
        <div class="text-center d-flex flex-column align-items-center justify-content-center w-30 text-nowrap">
            <h1>Week @Model.Prognosis.WeekNumber</h1>
            <h6>@formattedFirstDate - @formattedLastDate</h6>
        </div>
    </div>
</header>

<br />

<form asp-action="Aanmaken">
    <input type="hidden" asp-for="Prognosis.Id" />
    <input type="hidden" asp-for="Prognosis.Year" />
    <input type="hidden" asp-for="Prognosis.WeekNumber" />

    <div class="d-flex justify-content-center">
        <table class="table">
            <thead>
                <tr>
                    <th class="table-corner-l">Dag</th>
                    <th>Schatting<br />Bezoekersdrukte</th>
                    <th>Feestdagen</th>
                    <th>Weer</th>
                    <th>Overig</th>
                    <th class="table-corner-r">Totale<br />Schatting Bezoekersdrukte</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var day in daysOfTheWeek)
                {
                    var i = Array.IndexOf(daysOfTheWeek, day);
                    var visitorEstimate = Model.Prognosis.PrognosisDays[i].VisitorEstimate;
                    var holidayValue = Model.Prognosis.PrognosisDays.First(x => x.Weekday == i).Factors.First(x => x.Type == "Feestdagen").Impact;
                    var otherValue = Model.Prognosis.PrognosisDays.First(x => x.Weekday == i).Factors.First(x => x.Type == "Overig").Impact;
                    <tr>
                        <td class="text-center">@day</td>
                        <td class="text-center">
                            <input id="visitor-estimate-@i" name="visitorEstimates" type="number" class="form-control" value="@visitorEstimate" onchange="updateVisitorEstimate()">
                        </td>
                        <td class="text-center">
                            <input id="holiday-@i" name="holidays" type="number" class="form-control" value="@holidayValue" onchange="updateVisitorEstimate()">

                        </td>
                        <td class="text-center align-items-center" style="width: 200px;">
                            <div class="d-flex flex-row gap-4 justify-content-center">
                                <img id="weather-icon-@i" src="/images/weather/3.svg" class="background-white" style="width: 50px; height: 50px;" />
                                <select id="weather-select-@i" name="weather" class="form-control form-select" onchange="updateIcon(@i); updateVisitorEstimate();">
                                    @foreach (var weather in Model.WeatherValues)
                                    {
                                        <option value="@weather.Impact">@weather.Impact</option>
                                    }
                                </select>
                            </div>
                        </td>
                        <td class="table-secondary text-center d-flex flex-row align-items-center gap-4">
                            <input id="other-@i" name="other" type="number" class="form-control" value="@otherValue" onchange="updateVisitorEstimate()">
                            <textarea name="description" class="factor-description" placeholder="Beschrijving"></textarea>
                        </td>
                        <td class="text-center"><p id="total-estimated-visitor-count-@i" class="background-light impact-unchangeable-dark">0</p></td>
                    </tr>

                }
            </tbody>
        </table>
    </div>

    <br />

    <div>
        <table class="table">
            <thead>
                <tr>
                    <th class="table-corner-l">Activiteit</th>
                    <th>Afdeling</th>
                    <th>Duur</th>
                    <th>Gemiddelde Uitvoeringen Per Dag</th>
                    <th class="table-corner-r">Per bezoeker</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var norm in Model.Norms)
                {
                    <tr>
                        <td>@norm.Activity</td>
                        <td>@norm.Department</td>
                        <td>
                            @{
                                string readableDuration = norm.Duration.ToString();
                                string durationUnit = "Seconden";

                                if (norm.Duration % 3600 == 0)
                                {
                                    readableDuration = (norm.Duration / 3600).ToString();
                                    durationUnit = "Uren";
                                }
                                else if (norm.Duration % 60 == 0)
                                {
                                    readableDuration = (norm.Duration / 60).ToString();
                                    durationUnit = "Minuten";
                                }
                            }
                            @readableDuration @durationUnit
                        </td>
                        <td>@norm.AvgDailyPerformances</td>
                        <td>
                            @if (norm.PerVisitor)
                            {
                                <p>Ja</p>
                            }
                            else
                            {
                                <p>Nee</p>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <br />

    <div class="d-flex justify-content-around align-items-center">
        <button type="submit" class="btn bumbo-btn"><i class="fas fa-save"></i> Prognose Berekenen</button>
        <a class="btn bumbo-btn bumbo-btn-danger" asp-controller="Prognoses" asp-action="Index"><i class="fa-solid fa-ban"></i> Prognose Afbreken</a>
    </div>
</form>

<script>
    function updateIcon(selectId) {
        const weatherSelect = document.getElementById("weather-select-" + selectId);
        const weatherIcon = document.getElementById("weather-icon-" + selectId);
        weatherIcon.src = "/images/weather/" + weatherSelect.value + ".svg";
    }

    function updateVisitorEstimate() {
        for (let i = 0; i < 7; i++) {
            const visitorEstimate = parseFloat(document.getElementById("visitor-estimate-" + i).value) || 0;
            const holidayImpact = parseFloat(document.getElementById("holiday-" + i).value) || 0;
            const weatherImpact = parseFloat(document.getElementById("weather-select-" + i).options[document.getElementById("weather-select-" + i).selectedIndex].className) || 0;
            const otherImpact = parseFloat(document.getElementById("other-" + i).value) || 0;
            
            const totalEstimate = Math.round(visitorEstimate * (1 + holidayImpact / 100) * (1 + weatherImpact / 100) * (1 + otherImpact / 100));
            document.getElementById("total-estimated-visitor-count-" + i).innerText = totalEstimate;
        }
    }
    updateVisitorEstimate();
</script>
