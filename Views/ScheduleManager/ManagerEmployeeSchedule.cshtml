@model BumboSolid.Models.EmployeeScheduleViewModel

@{
    string[] daysOfTheWeek = { "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag", "Zondag" };

    var schedule = Model.Weeks.FirstOrDefault(w => w.Id == Model.WeekId);
    if (schedule == null) return;
    var shifts = schedule.Shifts;

    DateTime startDate = GetFirstDateOfWeek(schedule.Year, schedule.WeekNumber);
    DateTime endDate = startDate.AddDays(6);
}

@functions {
    public static DateTime GetFirstDateOfWeek(int year, int weekOfYear)
    {
        var jan1 = new DateTime(year, 1, 1);
        var daysOffset = (int)DayOfWeek.Monday - (int)jan1.DayOfWeek;
        var firstMonday = jan1.AddDays(daysOffset > 0 ? daysOffset - 7 : daysOffset);
        return firstMonday.AddDays((weekOfYear - 1) * 7);
    }
}

<header class="d-flex align-items-center justify-content-between header-items mb-2">
    <div>
        <a class="btn new-btn" asp-action="ManagerSchedule" asp-route-id="@Model.WeekId">Terug</a>
    </div>
    <div>
        <a class="btn new-btn @(Model.PreviousWeekId == null ? "disabled" : "")"
           asp-action="ManagerEmployeeSchedule" asp-route-id="@Model.PreviousWeekId" asp-route-employeeId="@Model.EmployeeId">
            Vorige Week
        </a>
    </div>
    <div class="text-nowrap">
        <h1>Rooster voor @Model.EmployeeName</h1>
    </div>
    <div>
        <a class="btn new-btn @(Model.NextWeekId == null ? "disabled" : "")"
           asp-action="ManagerEmployeeSchedule" asp-route-id="@Model.NextWeekId" asp-route-employeeId="@Model.EmployeeId">
            Volgende Week
        </a>
    </div>
    <div>
        <a class="btn new-btn @(Model.IsCurrentWeek ? "disabled" : "")"
           asp-action="ManagerEmployeeSchedule" asp-route-id="" asp-route-employeeId="@Model.EmployeeId">
            Huidige Week
        </a>
    </div>
</header>

<body>
    <div class="schedule-agenda">
        <div class="days-header">
            @foreach (var day in daysOfTheWeek)
            {
                var dayIndex = Array.IndexOf(daysOfTheWeek, day);
                var date = startDate.AddDays(dayIndex);
                <div class="day-header">
                    <h2>@day</h2>
                    <p>@date.ToString("dd-MM")</p>
                </div>
            }
        </div>

        <div class="shifts-row">
            @foreach (var day in daysOfTheWeek)
            {
                var shiftsForDay = shifts.Where(s => s.Weekday == Array.IndexOf(daysOfTheWeek, day) && s.EmployeeId == Model.EmployeeId).OrderBy(s => s.StartTime).ToList();
                <div class="shift-column">
                    @if (shiftsForDay.Any())
                    {
                        <ul class="shift-list">
                            @foreach (var shift in shiftsForDay)
                            {
                                <a asp-controller="Shifts" asp-action="Edit" asp-route-returnUrl="@Context.Request.Path" asp-route-id="@shift.Id" class="w-100 shift-link text-decoration-none">
                                <li class="shift-item">
                                    <div class="shift-details">
                                        <span class="shift-time">
                                            <i class="fa-regular fa-clock"></i> @shift.StartTime.ToString("HH:mm") - @shift.EndTime.ToString("HH:mm")
                                        </span>
                                        <span class="shift-department">@shift.Department</span>
                                    </div>
                                </li>
                                </a>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="no-shifts">Geen shifts voor deze dag.</p>
                    }
                </div>
            }
        </div>
    </div>
</body>