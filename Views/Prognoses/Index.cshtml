@model BumboSolid.Web.Models.PrognosesViewModel

@{
    ViewData["Title"] = "Home Page";

    String[] daysOfTheWeek = { "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag", "Zondag" };

    // Function to calculate the first date of the week (Monday)
    DateTime GetStartDate(int year, int week)
    {
        var cultureInfo = new System.Globalization.CultureInfo("en-US");
        var calendar = cultureInfo.Calendar;

        var jan1 = new DateTime(year, 1, 1);
        var firstDayOfWeek = jan1.AddDays((week - 1) * 7 - (int)jan1.DayOfWeek + (int)DayOfWeek.Monday);

        if (firstDayOfWeek.Year < year)
        {
            firstDayOfWeek = firstDayOfWeek.AddDays(7);
        }

        return firstDayOfWeek;
    }

    int previousId = Model.Id - 1;
    int nextId = Model.Id + 1;

    int intValue;
    decimal decimalValue;

    DateTime GetEndDate(int year, int week)
    {
        return GetStartDate(year, week).AddDays(6);
    }

    // Get the selected prognosis details
    var selectedPrognosis = Model.Prognoses.FirstOrDefault(x => x.Id == Model.Id);
    var firstDate = GetStartDate(selectedPrognosis.Year, selectedPrognosis.Week);
    var lastDate = GetEndDate(selectedPrognosis.Year, selectedPrognosis.Week);

    // Format the dates to dd/MM/yyyy
    var formattedFirstDate = firstDate.ToString("dd/MM/yyyy");
    var formattedLastDate = lastDate.ToString("dd/MM/yyyy");
}

<!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://kit.fontawesome.com/981e782106.js" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<div class="d-flex flex-row">
    <div class="Prognosis-Left">
        <a class="btn btn-primary" asp-controller="Prognoses" asp-action="Aanmaken">Prognose Aanmaken</a>

        <div class="background-dark" id="prognosis-scrollbar">
            <table class="table">
                @foreach (var item in Model.Prognoses)
                {
                    <tr>
                        <a class="btn btn-outline-primary" asp-controller="Prognoses" asp-action="Index" asp-route-id="@item.Id">
                            @Html.DisplayFor(modelItem => item.Year) - week @Html.DisplayFor(modelItem => item.Week)
                        </a>
                    </tr>
                }
            </table>
        </div>

        <a class="btn btn-primary" asp-controller="Normeringen" asp-action="Index">Normeringen Beheren</a>
        <a class="btn btn-primary" asp-controller="Feestdagen" asp-action="Index">Feestdagen Beheren</a>
    </div>

    <div class="Prognosis-Right">
        <div class="d-flex flex-row">
            <a class="btn btn-primary" asp-controller="Prognoses" asp-action="Index" asp-route-id="@previousId">← Vorige Week</a>

            <div class="background-dark" id="prognosis-date-box">
                <span>@formattedFirstDate - @formattedLastDate</span>
            </div>

            <a class="btn btn-primary" asp-controller="Prognoses" asp-action="Index" asp-route-id="@nextId">Volgende Week →</a>
        </div>
        <div class="background-dark">
            <div class="prognosis-table">
                <table cellspacing="0">
                    <colgroup>
                        <col />
                        <col class="prognosis-table-color KVV" />
                        <col class="prognosis-table-color KVV" />
                        <col class="prognosis-table-color KVV" />
                        <col />
                        <col class="prognosis-table-color" />
                        <col class="prognosis-table-color" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th></th>
                            <th>Kassa</th>
                            <th>Vakkenvuller</th>
                            <th>Vers</th>
                            <th></th>
                            <th>Externe Factors</th>
                            <th>Verwachte Bezoekersdrukte</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < daysOfTheWeek.Length; i++)
                        {
                            String day = daysOfTheWeek[i];
                            <tr>
                                <td>
                                    @day
                                </td>

                                @* Kassa *@
                                @{
                                    var kassa = Model.Prognoses.FirstOrDefault(x => x.Id == Model.Id)?.PrognosisDays.FirstOrDefault(x => x.Weekday == i)?.PrognosisFunctions.FirstOrDefault(x => x.Function == "Kassa");
                                    if (kassa != null)
                                    {
                                        intValue = kassa.WorkHours;
                                        decimalValue = kassa.Staff;
                                    }
                                    else
                                    {
                                        intValue = 0;
                                        decimalValue = 0;
                                    }
                                }
                                <td>
                                    <div class="workHoursBox">
                                        @intValue <br />
                                    </div>
                                    <div class="staffBox">
                                        @decimalValue
                                    </div>
                                </td>

                                @* Vakkenvullen *@
                                @{
                                    var vakkenvuller = Model.Prognoses.FirstOrDefault(x => x.Id == Model.Id)?.PrognosisDays.FirstOrDefault(x => x.Weekday == i)?.PrognosisFunctions.FirstOrDefault(x => x.Function == "Vakkenvuller");
                                    if (vakkenvuller != null)
                                    {
                                        intValue = vakkenvuller.WorkHours;
                                        decimalValue = vakkenvuller.Staff;
                                    }
                                    else
                                    {
                                        intValue = 0;
                                        decimalValue = 0;
                                    }
                                }
                                <td>
                                    <div class="workHoursBox">
                                        @intValue <br />
                                    </div>
                                    <div class="staffBox">
                                        @decimalValue
                                    </div>
                                </td>

                                @* Vers *@
                                @{
                                    var vers = Model.Prognoses.FirstOrDefault(x => x.Id == Model.Id)?.PrognosisDays.FirstOrDefault(x => x.Weekday == i)?.PrognosisFunctions.FirstOrDefault(x => x.Function == "Vers");
                                    if (vers != null)
                                    {
                                        intValue = vers.WorkHours;
                                        decimalValue = vers.Staff;
                                    }
                                    else
                                    {
                                        intValue = 0;
                                        decimalValue = 0;
                                    }
                                }
                                <td>
                                    <div class="workHoursBox">
                                        @intValue <br />
                                    </div>
                                    <div class="staffBox">
                                        @decimalValue
                                    </div>
                                </td>
                                <td></td>

                                @* ExternFactors *@
                                @{
                                    var totalImpact = 1.0;

                                    var prognose = Model.Prognoses.FirstOrDefault(x => x.Id == Model.Id);
                                    var prognosisDay = prognose?.PrognosisDays.FirstOrDefault(x => x.Weekday == i);
                                    var factors = prognosisDay?.Factors;

                                    if (factors != null)
                                    {
                                        foreach (var factor in factors)
                                        {
                                            var impactFactor = 1 + (factor.Impact / 100.0);
                                            totalImpact *= impactFactor;
                                        }
                                    }
                                    else
                                    {
                                        totalImpact = 1;
                                    }

                                    var roundedTotalImpact = Math.Round((totalImpact - 1) * 100);
                                }
                                <td>
                                    <div class="highlightBox">
                                        @roundedTotalImpact%
                                    </div>
                                </td>

                                @* VisitorEsitmate *@
                                @{
                                    intValue = Model.Prognoses.FirstOrDefault(x => x.Id == Model.Id)?.PrognosisDays.FirstOrDefault(x => x.Weekday == i)?.VisitorEstimate ?? 0;
                                }
                                <td>
                                    <div class="highlightBox">
                                        @intValue
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="d-flex flex-row justify-content-evenly align-items-center">
                    <div class="prognosis-index">
                        <div class="legend-item">
                            <div class="color-block workHoursBox"></div>
                            Workhours
                            <div class="color-block staffBox"></div>
                            Staff
                        </div>
                    </div>
                    <a class="btn btn-primary" asp-controller="Bewerken" asp-action="Factoren">Factoren Bewerken</a>
                </div>
            </div>
        </div>
    </div>
</div>
