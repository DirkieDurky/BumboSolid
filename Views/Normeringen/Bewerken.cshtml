@model BumboSolid.Data.Models.Norm

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="modal-body">
    <form asp-action="Bewerken" method="post">
        <div class="d-flex flex-row">
            <div class="col-sm-2">
                <h6>Activiteit</h6>
            </div>
            <div class="col-sm-2">
                <h6>Functie</h6>
            </div>
            <div class="col-sm-3">
                <h6>Duur</h6>
            </div>
            <div class="col-sm-4">
                <h6>Gemiddelde Uitvoeringen Per Dag</h6>
            </div>
        </div>

        <div id="norm-edit-form">
            <div class="form-group row align-items-center norm-row">
                <div class="col-sm-2">
                    <input type="text" class="form-control" asp-for="Activity" />
                    <span asp-validation-for="Activity" class="text-danger"></span>
                </div>

                <div class="col-sm-2">
                    <select class="form-control" asp-for="Function">
                        <option value="Vers" selected="@(Model.Function == "Vers" ? "selected" : null)">Vers</option>
                        <option value="Kassa" selected="@(Model.Function == "Kassa" ? "selected" : null)">Kassa</option>
                        <option value="Vakkenvullen" selected="@(Model.Function == "Vakkenvullen" ? "selected" : null)">Vakkenvullen</option>
                    </select>
                    <span asp-validation-for="Function" class="text-danger"></span>
                </div>

                <div class="col-sm-1">
                    @* Calculating the readable duration based on the selected unit *@
                    @{
                        string readableDuration = Model.Duration.ToString();
                        if (Model.Duration % 3600 == 0)
                        {
                            readableDuration = (Model.Duration / 3600).ToString();
                        }
                        else if (Model.Duration % 60 == 0)
                        {
                            readableDuration = (Model.Duration / 60).ToString();
                        }
                    }
                    <input type="number" class="form-control" asp-for="Duration" value="@readableDuration" oninput="this.value = this.value.replace(/[^0-9]/g, '');" />
                </div>

                <div class="col-sm-2">
                    <select class="form-control" id="DurationUnit" name="DurationUnit">
                        <option value="seconds" selected="@(Model.Duration % 60 != 0 && Model.Duration % 3600 != 0 ? "selected" : null)">Seconden</option>
                        <option value="minutes" selected="@(Model.Duration % 60 == 0 && Model.Duration % 3600 != 0 ? "selected" : null)">Minuten</option>
                        <option value="hours" selected="@(Model.Duration % 3600 == 0 ? "selected" : null)">Uren</option>
                    </select>
                </div>

                <div class="col-sm-2 d-flex align-items-center gap-2">
                    <input type="number" class="form-control" asp-for="AvgDailyPerformances" oninput="this.value = this.value.replace(/[^0-9]/g, '');" />
                    <label for="per-bezoeker" class="col-form-label mx-2">per bezoeker</label>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" asp-for="PerVisitor" id="per-bezoeker" style="transform: scale(1.5);" />
                    </div>
                </div>

                <span asp-validation-for="Duration" class="text-danger"></span>
                <span asp-validation-for="AvgDailyPerformances" class="text-danger"></span>
            </div>
        </div>

        <div class="d-flex flex-row mt-3">
            <button type="submit" class="btn btn-primary me-3">Opslaan & Bijwerken</button>
            <a asp-controller="Normeringen" asp-action="Index" class="btn btn-secondary">Terug</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
