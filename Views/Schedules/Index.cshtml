@model BumboSolid.Models.SchedulesViewModel

@{
    string[] daysOfTheWeek = { "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag", "Zondag" };

    var schedule = Model.Weeks.First(w => w.Id == Model.WeekId);
    var shifts = schedule.Shifts;
    var departments = shifts.Select(s => s.Department).Distinct();

    DateTime startDate = GetFirstDateOfWeek(schedule.Year, schedule.WeekNumber);
    DateTime endDate = startDate.AddDays(6);
}

@functions {
    public static DateTime GetFirstDateOfWeek(int year, int weekOfYear)
    {
        var jan1 = new DateTime(year, 1, 1);
        var daysOffset = (int)DayOfWeek.Monday - (int)jan1.DayOfWeek;
        var firstMonday = jan1.AddDays(daysOffset > 0 ? daysOffset - 7 : daysOffset);
        return firstMonday.AddDays((weekOfYear - 1) * 7);
    }
}

<header class="d-flex flex-column align-items-center">
    <div class="d-flex justify-content-around w-100 header-items mb-2">
        <div>
            <a class="btn btn-primary" asp-controller="Schedules">
                Rooster Beheren
            </a>
        </div>
        <div>
            <a class="btn btn-primary" asp-controller="Shifts" asp-action="Create" asp-route-weekid="@schedule.Id">
                Shift Toevoegen
            </a>
        </div>
    </div>
    <div class="d-flex justify-content-between w-100 header-items">
        <div></div>
        <div>
            @if (Model.PreviousWeekId != null)
            {
                <a class="btn btn-primary" asp-controller="Schedules" asp-action="Index" asp-route-id="@Model.PreviousWeekId">
                    Vorige Week
                </a>
            }
        </div>
        <div class="text-center">
            <h1>Rooster</h1>
        </div>
        <div>
            @if (Model.NextWeekId != null)
            {
                <a class="btn btn-primary" asp-controller="Schedules" asp-action="Index" asp-route-id="@Model.NextWeekId">
                    Volgende Week
                </a>
            }
        </div>
        <div>
            @if (!Model.IsCurrentWeek)
            {
                <a class="btn btn-primary" asp-controller="Schedules" asp-action="Index" asp-route-id="@Model.CurrentWeekNumber">
                    Huidige Week
                </a>
            }
        </div>
    </div>
    <div class="justify-content-center">
        <p>@startDate.ToString("dd/MM/yyyy") - @endDate.ToString("dd/MM/yyyy")</p>
    </div>
</header>

<body class="schedule">
    @foreach (var afdeling in departments)
    {
        <div class="dropdown-bar" onclick="toggleVisibility('@afdeling-content')">
            <span>@afdeling <i class="fa-solid fa-chevron-up arrow"></i></span>
        </div>
        <div id="@afdeling-content" class="hidden">
            <table class="schedule-table">
                <thead>
                    <tr>
                        <th>Werknemer</th>
                        @foreach (var day in daysOfTheWeek)
                        {
                            <th>@day</th>
                        }
                        <th>Totaal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var shiftGroup in shifts
                   .Where(s => s.Department == afdeling)
                   .GroupBy(s => s.EmployeeName))
                    {
                        <tr>
                            <td>
                                @if (shiftGroup.First().EmployeeId.HasValue)
                                {
                                    <a asp-controller="Schedules" asp-action="EmployeeSchedule" asp-route-id="@schedule.Id" asp-route-employeeId="@shiftGroup.First().EmployeeId" class="shift-link">
                                        @shiftGroup.Key
                                    </a>
                                }
                                else
                                {
                                    @shiftGroup.Key <span> (External)</span>
                                }
                            </td>

                            @foreach (var day in daysOfTheWeek)
                            {
                                <td>
                                    @foreach (var shift in shiftGroup.Where(s => s.Weekday == Array.IndexOf(daysOfTheWeek, day)))
                                    {
                                        <div>
                                            <a asp-controller="Shifts" asp-action="Detail" asp-route-shiftId="@shift.Id" class="shift-link">
                                                <i class="fa-regular fa-clock"></i> @shift.StartTime.ToString("HH:mm") - @shift.EndTime.ToString("HH:mm")
                                            </a>
                                        </div>
                                    }
                                </td>
                            }

                            @{
                                var totalHoursWorked = shiftGroup.Sum(s => (s.EndTime - s.StartTime).TotalMinutes);
                                var totalTimeWorked = TimeSpan.FromMinutes(totalHoursWorked).ToString(@"hh\:mm");
                            }
                            <td>
                                <div><i class="fa-regular fa-clock"></i> @totalTimeWorked</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</body>

<script>
    function toggleVisibility(id) {
        var content = document.getElementById(id);
        var arrow = content.previousElementSibling.querySelector('.arrow');

        if (content.classList.contains('hidden')) {
            content.classList.remove('hidden');
            arrow.classList.add('flipped');
        } else {
            content.classList.add('hidden');
            arrow.classList.remove('flipped');
        }
    }
</script>
