@model BumboSolid.Models.SchedulesViewModel

@{
    String[] daysOfTheWeek = { "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag", "Zondag" };

    var schedule = Model.Weeks.First(w => w.Id == Model.WeekId);
    var shifts = schedule.Shifts;
    var departments = shifts.Select(s => s.Department).Distinct();

    DateTime startDate = GetFirstDateOfWeek(schedule.Year, schedule.WeekNumber);
    DateTime endDate = startDate.AddDays(6);
}

@functions {
    public static DateTime GetFirstDateOfWeek(int year, int weekOfYear)
    {
        var jan1 = new DateTime(year, 1, 1);
        var daysOffset = (int)DayOfWeek.Monday - (int)jan1.DayOfWeek;
        var firstMonday = jan1.AddDays(daysOffset > 0 ? daysOffset - 7 : daysOffset);
        return firstMonday.AddDays((weekOfYear - 1) * 7);
    }
}

<header class="d-flex align-items-center gap-3 justify-content-center gap-3">
    <div class="w-100 text-align text-end">
        <a class="new-btn" asp-controller="">Rooster Beheren</a>
    </div>
    <div class="mx-3 text-center text-nowrap">
        <h1>Rooster</h1>
        <p>@startDate.ToString("dd/MM/yyyy") - @endDate.ToString("dd/MM/yyyy")</p>
    </div>
    <div class="w-100">
        <a class="new-btn" asp-controller="Shifts" asp-action="Create" asp-route-weekid="@schedule.Id">Shift Toevoegen</a>
    </div>
</header>

<div class="schedule">
    @foreach (var afdeling in departments)
    {
        <div class="dropdown-bar" onclick="toggleVisibility('@afdeling-content')">
            <span>@afdeling<i class="fa-solid fa-chevron-up arrow"></i></span>
        </div>
        // add viewbag in controller to see which ones are opened
        <div id="@afdeling-content" class="hidden">
            <table class="schedule-table">
                <thead>
                    <tr>
                        <th>Werknemer</th>
                        @foreach (var day in daysOfTheWeek)
                        {
                            <th>@day</th>
                        }
                        <th>Totaal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var shiftGroup in shifts.Where(s => s.Department == afdeling)
                   .GroupBy(s => s.EmployeeName))
                    {
                        <tr>
                            <td>
                                <div>
                                    <a asp-controller="Shifts" asp-action="Details" asp-route-employee="@shiftGroup.First().Employee" asp-route-weekNumber ="@schedule.WeekNumber" class="shift-link">
                                        @shiftGroup.Key
                                    </a>
                                </div>
                            </td>

                            @foreach (var day in daysOfTheWeek)
                            {
                                <td>
                                    @foreach (var shift in shiftGroup.Where(s => s.Weekday == Array.IndexOf(daysOfTheWeek, day)))
                                    {
                                        <div>
                                            <a asp-controller="Shifts" asp-action="Detail" asp-route-shiftId="@shift.Id" class="shift-link">
                                                <i class="fa-regular fa-clock"></i> @shift.StartTime.ToString("HH:mm") - @shift.EndTime.ToString("HH:mm")
                                            </a>
                                        </div>
                                    }
                                </td>
                            }

                            @{
                                var totalHoursWorked = shiftGroup.Sum(s => (s.EndTime - s.StartTime).TotalMinutes);
                                var totalHoursPlanned = shiftGroup.Sum(s => (s.EndTime - s.StartTime).TotalMinutes);

                                var totalTimeWorked = TimeSpan.FromMinutes(totalHoursWorked).ToString(@"hh\:mm");
                                var totalTimePlanned = TimeSpan.FromMinutes(totalHoursPlanned).ToString(@"hh\:mm");
                            }
                            <td>
                                <div><i class="fa-regular fa-clock"></i> @totalTimeWorked / @totalTimePlanned</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<script>
    function toggleVisibility(id) {
        var content = document.getElementById(id);
        var arrow = content.previousElementSibling.querySelector('.arrow');

        if (content.classList.contains('hidden')) {
            content.classList.remove('hidden');
            arrow.classList.add('flipped');
        } else {
            content.classList.add('hidden');
            arrow.classList.remove('flipped');
        }
    }
</script>
